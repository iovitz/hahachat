generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int      @db.UnsignedInt()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("post")
}

model UserProfile {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt()
  uid       String?  @unique @db.Char(20)
  user      User?    @relation(fields: [uid], references: [userId])
  gender    Boolean?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_profile")
}

model User {
  id        Int          @id @default(autoincrement()) @db.UnsignedInt()
  userId    String       @unique @db.Char(20)
  nickname  String       @db.Char(20)
  username  String       @unique @db.Char(20)
  password  String       @db.Char(70)
  email     String?      @db.Char(30)
  phone     String?      @db.Char(20)
  posts     Post[]
  profile   UserProfile?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@map("user")
}

model ServerLog {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt()
  userId    String   @db.Char(20)
  logid     String?
  level     String   @db.Char(10)
  timestamp DateTime @db.DateTime()
  message   String   @db.Char(200)
  content   String?  @db.Text
  context   String?  @db.Char(20)
  createdAt DateTime @default(now())

  @@map("server_log")
}

model ClientLog {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt()
  uuid      String
  event     String   @db.Char(50)
  content   String   @db.Text
  createdAt DateTime @default(now())

  @@map("client_log")
}
